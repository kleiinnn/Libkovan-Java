/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package linkjvm.low.create;

public class Create {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Create(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Create obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        linkjvm_createJNI.delete_Create(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean connect() {
    return linkjvm_createJNI.Create_connect(swigCPtr, this);
  }

  public boolean disconnect() {
    return linkjvm_createJNI.Create_disconnect(swigCPtr, this);
  }

  public boolean isConnected() {
    return linkjvm_createJNI.Create_isConnected(swigCPtr, this);
  }

  public void setPassiveMode() {
    linkjvm_createJNI.Create_setPassiveMode(swigCPtr, this);
  }

  public void setSafeMode() {
    linkjvm_createJNI.Create_setSafeMode(swigCPtr, this);
  }

  public void setFullMode() {
    linkjvm_createJNI.Create_setFullMode(swigCPtr, this);
  }

  public void setMode(Create.Mode mode) {
    linkjvm_createJNI.Create_setMode(swigCPtr, this, mode.swigValue());
  }

  public Create.Mode mode() {
    return Create.Mode.swigToEnum(linkjvm_createJNI.Create_mode(swigCPtr, this));
  }

  public void send(CreateScript script) {
    linkjvm_createJNI.Create_send(swigCPtr, this, CreateScript.getCPtr(script), script);
  }

  public boolean write(short c) {
    return linkjvm_createJNI.Create_write__SWIG_0(swigCPtr, this, c);
  }

  public boolean write(SWIGTYPE_p_unsigned_char data, long len) {
    return linkjvm_createJNI.Create_write__SWIG_1(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), len);
  }

  public void flush() {
    linkjvm_createJNI.Create_flush(swigCPtr, this);
  }

  public short read() {
    return linkjvm_createJNI.Create_read__SWIG_0(swigCPtr, this);
  }

  public int read(SWIGTYPE_p_unsigned_char data, long len) {
    return linkjvm_createJNI.Create_read__SWIG_1(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), len);
  }

  public boolean blockingRead(SWIGTYPE_p_unsigned_char data, long size, long timeout) {
    return linkjvm_createJNI.Create_blockingRead__SWIG_0(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), size, timeout);
  }

  public boolean blockingRead(SWIGTYPE_p_unsigned_char data, long size) {
    return linkjvm_createJNI.Create_blockingRead__SWIG_1(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), size);
  }

  public void setLeds(boolean advance, boolean play, short color, short brightness) {
    linkjvm_createJNI.Create_setLeds(swigCPtr, this, advance, play, color, brightness);
  }

  public void drive(short velocity, short radius) {
    linkjvm_createJNI.Create_drive(swigCPtr, this, velocity, radius);
  }

  public void driveDirect(short left, short right) {
    linkjvm_createJNI.Create_driveDirect(swigCPtr, this, left, right);
  }

  public void driveStraight(short speed) {
    linkjvm_createJNI.Create_driveStraight(swigCPtr, this, speed);
  }

  public void stop() {
    linkjvm_createJNI.Create_stop(swigCPtr, this);
  }

  public void turn(short angle, int speed) {
    linkjvm_createJNI.Create_turn(swigCPtr, this, angle, speed);
  }

  public void move(short millimeters, int speed) {
    linkjvm_createJNI.Create_move(swigCPtr, this, millimeters, speed);
  }

  public void spin(short speed) {
    linkjvm_createJNI.Create_spin(swigCPtr, this, speed);
  }

  public short angularVelocity() {
    return linkjvm_createJNI.Create_angularVelocity(swigCPtr, this);
  }

  public void spinClockwise(short speed) {
    linkjvm_createJNI.Create_spinClockwise(swigCPtr, this, speed);
  }

  public void spinCounterClockwise(short speed) {
    linkjvm_createJNI.Create_spinCounterClockwise(swigCPtr, this, speed);
  }

  public boolean setBaudRate(short baudCode) {
    return linkjvm_createJNI.Create_setBaudRate(swigCPtr, this, baudCode);
  }

  public void setDistance(int distance) {
    linkjvm_createJNI.Create_setDistance(swigCPtr, this, distance);
  }

  public void setAngle(int angle) {
    linkjvm_createJNI.Create_setAngle(swigCPtr, this, angle);
  }

  public SWIGTYPE_p_AbstractButton playButton() {
    long cPtr = linkjvm_createJNI.Create_playButton(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AbstractButton(cPtr, false);
  }

  public SWIGTYPE_p_AbstractButton advanceButton() {
    long cPtr = linkjvm_createJNI.Create_advanceButton(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AbstractButton(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t wall() {
    long cPtr = linkjvm_createJNI.Create_wall(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t cliffLeft() {
    long cPtr = linkjvm_createJNI.Create_cliffLeft(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t cliffFrontLeft() {
    long cPtr = linkjvm_createJNI.Create_cliffFrontLeft(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t cliffFrontRight() {
    long cPtr = linkjvm_createJNI.Create_cliffFrontRight(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t cliffRight() {
    long cPtr = linkjvm_createJNI.Create_cliffRight(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t virtualWall() {
    long cPtr = linkjvm_createJNI.Create_virtualWall(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t wallSignal() {
    long cPtr = linkjvm_createJNI.Create_wallSignal(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t cliffLeftSignal() {
    long cPtr = linkjvm_createJNI.Create_cliffLeftSignal(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t cliffFrontLeftSignal() {
    long cPtr = linkjvm_createJNI.Create_cliffFrontLeftSignal(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t cliffFrontRightSignal() {
    long cPtr = linkjvm_createJNI.Create_cliffFrontRightSignal(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t cliffRightSignal() {
    long cPtr = linkjvm_createJNI.Create_cliffRightSignal(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t cargoBayAnalogSignal() {
    long cPtr = linkjvm_createJNI.Create_cargoBayAnalogSignal(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_char_t cargoBayDigitalInputs() {
    long cPtr = linkjvm_createJNI.Create_cargoBayDigitalInputs(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_char_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_char_t ir() {
    long cPtr = linkjvm_createJNI.Create_ir(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_char_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_char_t chargingState() {
    long cPtr = linkjvm_createJNI.Create_chargingState(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_char_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_char_t batteryTemperature() {
    long cPtr = linkjvm_createJNI.Create_batteryTemperature(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_char_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t batteryCharge() {
    long cPtr = linkjvm_createJNI.Create_batteryCharge(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_unsigned_short_t batteryCapacity() {
    long cPtr = linkjvm_createJNI.Create_batteryCapacity(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_unsigned_short_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_int_t angle() {
    long cPtr = linkjvm_createJNI.Create_angle(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_int_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_int_t distance() {
    long cPtr = linkjvm_createJNI.Create_distance(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_int_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t bumpLeft() {
    long cPtr = linkjvm_createJNI.Create_bumpLeft(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t bumpRight() {
    long cPtr = linkjvm_createJNI.Create_bumpRight(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t wheelDropLeft() {
    long cPtr = linkjvm_createJNI.Create_wheelDropLeft(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t wheelDropRight() {
    long cPtr = linkjvm_createJNI.Create_wheelDropRight(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public SWIGTYPE_p_SensorT_bool_t wheelDropCaster() {
    long cPtr = linkjvm_createJNI.Create_wheelDropCaster(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SensorT_bool_t(cPtr, false);
  }

  public void setRefreshRate(int refreshRate) {
    linkjvm_createJNI.Create_setRefreshRate(swigCPtr, this, refreshRate);
  }

  public int refreshRate() {
    return linkjvm_createJNI.Create_refreshRate(swigCPtr, this);
  }

  public static Create instance() {
    long cPtr = linkjvm_createJNI.Create_instance();
    return (cPtr == 0) ? null : new Create(cPtr, false);
  }

  public CreateState state() {
    long cPtr = linkjvm_createJNI.Create_state(swigCPtr, this);
    return (cPtr == 0) ? null : new CreateState(cPtr, false);
  }

  public final static class Mode {
    public final static Create.Mode OffMode = new Create.Mode("OffMode");
    public final static Create.Mode PassiveMode = new Create.Mode("PassiveMode");
    public final static Create.Mode SafeMode = new Create.Mode("SafeMode");
    public final static Create.Mode FullMode = new Create.Mode("FullMode");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Mode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Mode.class + " with value " + swigValue);
    }

    private Mode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Mode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Mode(String swigName, Mode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Mode[] swigValues = { OffMode, PassiveMode, SafeMode, FullMode };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
