/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package linkjvm.low.buttons;
import linkjvm.low.sensors.BoolSensor;
public class AbstractButton extends BoolSensor {
  private long swigCPtr;

  protected AbstractButton(long cPtr, boolean cMemoryOwn) {
    super(linkjvm_buttonsJNI.AbstractButton_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AbstractButton obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        linkjvm_buttonsJNI.delete_AbstractButton(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void waitUntilClicked() {
    linkjvm_buttonsJNI.AbstractButton_waitUntilClicked(swigCPtr, this);
  }

  public void setPressed(boolean pressed) {
    linkjvm_buttonsJNI.AbstractButton_setPressed(swigCPtr, this, pressed);
  }

  public boolean isPressed() {
    return linkjvm_buttonsJNI.AbstractButton_isPressed(swigCPtr, this);
  }

  public boolean isNotPressed() {
    return linkjvm_buttonsJNI.AbstractButton_isNotPressed(swigCPtr, this);
  }

  public boolean isClicked() {
    return linkjvm_buttonsJNI.AbstractButton_isClicked(swigCPtr, this);
  }

  public void waitUntilReleased() {
    linkjvm_buttonsJNI.AbstractButton_waitUntilReleased(swigCPtr, this);
  }

  public void waitUntilPressed() {
    linkjvm_buttonsJNI.AbstractButton_waitUntilPressed(swigCPtr, this);
  }

}
